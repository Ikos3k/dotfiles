#!/bin/bash

eject-device() {
    sync
    echo "Ejecting the device $DEVICE..."
    sudo eject "$DEVICE"
    if [ $? -eq 0 ]; then
        echo "Device $DEVICE ejected successfully."
    else
        echo "Failed to eject $DEVICE. Continuing with power-off."
    fi
}

power-off-device() {
    eject-device
    sync
    read -p "Do you want to power off the device $DEVICE? [y/N]: " CONFIRM
    case "$CONFIRM" in
        [yY][eE][sS]|[yY])
            sudo udisksctl power-off -b "$DEVICE"
            if [ $? -eq 0 ]; then
                echo "Device $DEVICE powered off successfully."
            else
                echo "Failed to power off $DEVICE."
            fi
            ;;
        *)
            echo "Skipped powering off the device."
            ;;
    esac
}

if [ $# -lt 1 ]; then
    echo "Usage: unmount_device <partition> [mount_point]"
    echo "ex: $ unmount_device /dev/sdX1 /mnt/mydrive"
    exit 1
fi

PARTITION=$1
MOUNT_POINT=$2

if [ -z "$MOUNT_POINT" ]; then
    MOUNT_POINT=$(findmnt -n -o TARGET "$PARTITION")
    if [ -z "$MOUNT_POINT" ]; then
        echo "Could not find a mount point for device $PARTITION."
        exit 1
    fi
    echo "Detected mount point for $PARTITION: $MOUNT_POINT"
fi

DEVICE="/dev/$(lsblk -no PKNAME "$PARTITION")"

if [ -z "$DEVICE" ]; then
    echo "Could not determine the device for $PARTITION."
    exit 1
fi

echo "Device detected: $DEVICE"

if ! grep -q "$PARTITION" /proc/mounts; then
    echo "Partition $PARTITION is not mounted."
    power-off-device
    exit 1
fi

if [ -n "$MOUNT_POINT" ] && ! mountpoint -q "$MOUNT_POINT"; then
    echo "$MOUNT_POINT is not a valid mount point or does not exist."
    exit 1
fi

sync
if sudo umount "$MOUNT_POINT"; then
    echo "Unmounted $MOUNT_POINT successfully."
    power-off-device
else
    echo "Failed to unmount $MOUNT_POINT."
    exit 1
fi
